resultados <- replicate(10000, {
lanzamientos <- sample(c("Cara", "Cruz"), size = 2, replace = TRUE)
"Cara" %in% lanzamientos && "Cruz" %in% lanzamientos
})
# Calcular la probabilidad de obtener una cara y una cruz
probabilidad <- mean(resultados)
probabilidad
set.seed(123)  # Para reproducibilidad
# Simular 10,000 pares de lanzamientos de moneda
resultados <- replicate(10000, {
lanzamientos <- sample(c("Cara", "Cruz"), size = 2, replace = TRUE)
"Cara" %in% lanzamientos && "Cruz" %in% lanzamientos
})
# Calcular la probabilidad de obtener una cara y una cruz
probabilidad <- mean(resultados)
probabilidad
set.seed(123)  # Para reproducibilidad
# Simular 10,000 pares de lanzamientos de moneda
resultados <- replicate(10000, {
lanzamientos <- sample(c("Cara", "Cruz"), size = 2, replace = TRUE)
"Cara" %in% lanzamientos && "Cruz" %in% lanzamientos
})
# Calcular la probabilidad de obtener una cara y una cruz
probabilidad <- mean(resultados)
probabilidad
set.seed(123)  # Para reproducibilidad
# Simular 10,000 pares de lanzamientos de moneda
resultados <- replicate(10000, {
lanzamientos <- sample(c("Cara", "Cruz"), size = 2, replace = TRUE)
"Cara" %in% lanzamientos && "Cruz" %in% lanzamientos
})
# Calcular la probabilidad de obtener una cara y una cruz
probabilidad <- mean(resultados)
probabilidad
Ac <- choose(349, 15)
S <- choose(379, 15)
1 - Ac/S
1-2*exp(-1)
exp(-15/12)
1 - pnorm(450, mean = 400, sd = 20)
choose(25,2) / choose(26,3)
choose(2,2) / choose(26,3)
choose(1,2) / choose(26,3)
s <- 0
s <- 0
for (n in 1:26) {
s <- s + n * choose(n-1, 2) / choose(26, 3)
}
s
s <- 0
for (n in 1:26) {
s <- s + n * choose(n-1, 2) / choose(26, 3)
print(paste0("(n=", n, ") s = ", s))
}
s
LETTERS[26]
LETTERS[20]
1 - pnorm(0, mean = -1.5, sd = sqrt(5/3))
1 - pnorm(0.5, mean = 0.25, sd = 0.25*0.75/100)
1 - pnorm(0.35, mean = 0.25, sd = 0.25*0.75/100)
1 - pnorm(0.35, mean = 0.25, sd = 0.25*0.75/50)
1 - pnorm(0.3, mean = 0.25, sd = 0.25*0.75/50)
1 - pnorm(0.3, mean = 0.25, sd = 0.25*0.75/40)
1 - pnorm(0.27, mean = 0.25, sd = 0.25*0.75/40)
1 - pnorm(0.26, mean = 0.25, sd = 0.25*0.75/40)
1 - pnorm(0.26, mean = 0.25, sd = 0.25*0.75/35)
1 - pnorm(0.26, mean = 0.25, sd = sqrt(0.25*0.75/35))
1 - pnorm(0.3, mean = 0.25, sd = sqrt(0.25*0.75/35))
1 - pnorm(0.3, mean = 0.25, sd = sqrt(0.25*0.75/50))
1 - pnorm(0.4, mean = 0.25, sd = sqrt(0.25*0.75/50))
library(tidyverse)
dummy_df <- data.frame(
Estimador = c(
"Estimador I", "Estimador I", "Estimador I",
"Estimador II", "Estimador II", "Estimador II", "Estimador II", "Estimador II",
"Estimador III", "Estimador III", "Estimador III", "Estimador III", "Estimador III", "Estimador III", "Estimador III"
),
x = c(8, 9, 10, 6, 7, 8, 9, 10, 5, 6, 7, 8, 9, 10, 11),
y = c(3, 9,  3, 2, 3, 5, 3,  2, 1, 2, 3, 4, 3,  2,  1),
)
dummy_df <- data.frame(
Estimador = c(
"Estimador I", "Estimador I", "Estimador I",
"Estimador II", "Estimador II", "Estimador II", "Estimador II", "Estimador II",
"Estimador III", "Estimador III", "Estimador III", "Estimador III", "Estimador III", "Estimador III", "Estimador III"
),
x = c(8, 9, 10, 6, 7, 8, 9, 10, 5, 6, 7, 8, 9, 10, 11),
y = c(3, 9,  3, 2, 3, 5, 3,  2, 1, 2, 3, 4, 3,  2,  1)
)
dummy_df %>% ggplot(aes(x = x, y = y)) + geom_bar() + facet_wrap(vars(Estimador))
dummy_df %>% ggplot(aes(x = x, y = y)) + geom_bar(stat = "identity") + facet_wrap(vars(Estimador))
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
theme_bw(base_size = 18)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
theme_bw(base_size = 18) +
theme(
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_discrete(labels = 5:11) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_manual(labels = 5:11) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_continuous(labels = 5:11) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_discrete(labels = 5:11) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_discrete(values = 5:11) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_discrete(breaks = 5:11) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_discrete(breaks = 5:7) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_discrete(labels = 5:7) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
#scale_x_discrete(labels = 5:7) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_discrete(limits = 5:11) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
)
dummy_df %>%
ggplot(aes(x = x, y = y)) +
geom_bar(stat = "identity") +
facet_wrap(vars(Estimador)) +
scale_x_discrete(limits = 5:11) +
theme_bw(base_size = 18) +
theme(
axis.title.x=element_blank(),
axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank()
)
mean(c(5.8, 6.3, 6.9, 6.2, 6.5))
pt(6.34, df = 4)
pt((6.34 - 7)/(1), df = 4)
sd(c(5.8, 6.3, 6.9, 6.2, 6.5))
pt((6.34 - 7)/(0.4/sqrt(5)), df = 4)
(6.34 - 7)/(0.4/sqrt(5)
)
0.25*0.75 / 50
pnorm(50, mean = -30, sd = 10) - pnorm(-50, mean = -30, sd = 10)
(1.96*0.8)**2
(1.96*11/5)**2
11/5
qt(0.5, df = 8)
0.4*50
1283/1590
1-0.807
1.96 * sqrt(0.807*0.193/1590)
0.807 - 0.019
0.807 + 0.019
mean(c(12, 12, 15, 13, 11, 10, 14, 12))
mean(c(12, 14, 22, 19, 25, 11, 18, 17))
sd(c(12, 12, 15, 13, 11, 10, 14, 12))
sd(c(12, 14, 22, 19, 25, 11, 18, 17))
(12.37-17.25) - 1.96 * sqrt(1.6/40 + 4.8/35)
(12.37-17.25) + 1.96 * sqrt(1.6/40 + 4.8/35)
(12.37-15.25) - 1.96 * sqrt(1.6/40 + 4.8/35)
(12.37-15.25) + 1.96 * sqrt(1.6/40 + 4.8/35)
97 - qt(0.95, df = 16) * 16 / sqrt(17)
97 + qt(0.95, df = 16) * 16 / sqrt(17)
library(tidyverse)
taylor <- read.csv('taylor.csv')
setwd('C:/Users/PC/Downloads')
taylor <- read.csv('taylor.csv')
taylor <- read.csv('taylor.csv')
View(taylor)
taylor <- read.csv('Taylor_Train.csv')
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'utf-8')
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
View(taylor)
View(taylor)
taylor <- sapply(taylor, function(v) {as.numeric(gsub("\\.","", as.character(v)))})
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
View(taylor)
View(taylor)
removeThousandsSep <- function(v) {gsub("\\.","", v)}
sapply(df, removeThousandsSep)
taylor <- sapply(taylor, removeThousandsSep)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
taylor <- sapply(taylor, removeThousandsSep)
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeThousandsSep <- function(v) {gsub("\\,","", v)}
taylor <- sapply(taylor, removeThousandsSep)
View(taylor)
taylor <- lapply(taylor, removeThousandsSep)
taylor <- as.data.frame(sapply(taylor, removeThousandsSep))
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeThousandsSep <- function(v) {gsub("\\,","", v)}
taylor <- as.data.frame(sapply(taylor, removeThousandsSep))
View(taylor)
View(taylor)
View(taylor)
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeLongDash <- function(v) gsub("—,",NA, v)
taylor <- as.data.frame(sapply(taylor, removeLongDash))
View(taylor)
taylor$Revenue[4]
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeLongDash <- function(v) gsub("—", NA, v)
taylor <- as.data.frame(sapply(taylor, removeLongDash))
View(taylor)
removeThousandsSep <- function(v) gsub("\\,","", v)
taylor <- as.data.frame(sapply(taylor, removeThousandsSep))
View(taylor)
removeDollarSign <- function(v) gsub("\\$","", v)
taylor <- as.data.frame(sapply(taylor, removeDollarSign))
View(taylor)
View(taylor)
taylor <- taylor %>%
mutate(
Revenue = as.numeric(Revenue),
Attendance = strsplit(Attendance..tickets.sold...available., " / ")[[1]][1],
TicketsSold = strsplit(Attendance..tickets.sold...available., " / ")[[1]][2]
)
View(taylor)
?substr
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeLongDash <- function(v) gsub("—", NA, v)
removeThousandsSep <- function(v) gsub("\\,","", v)
removeDollarSign <- function(v) gsub("\\$","", v)
taylor <- as.data.frame(sapply(taylor, removeLongDash))
taylor <- as.data.frame(sapply(taylor, removeThousandsSep))
taylor <- as.data.frame(sapply(taylor, removeDollarSign))
taylor <- taylor %>%
separate(
col = Attendance..tickets.sold...available.,
into = c("Attendance", "TicketsSold"),
sep = " / "
)
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeLongDash <- function(v) gsub("—", NA, v)
removeThousandsSep <- function(v) gsub("\\,","", v)
removeDollarSign <- function(v) gsub("\\$","", v)
taylor <- as.data.frame(sapply(taylor, removeLongDash))
taylor <- as.data.frame(sapply(taylor, removeThousandsSep))
taylor <- as.data.frame(sapply(taylor, removeDollarSign))
View(taylor)
taylor <- taylor %>%
separate(
col = Attendance..tickets.sold...available.,
into = c("Attendance", "TicketsSold"),
sep = " / "
)
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeLongDash <- function(v) gsub("—", NA, v)
removeThousandsSep <- function(v) gsub("\\,","", v)
removeDollarSign <- function(v) gsub("\\$","", v)
taylor <- as.data.frame(sapply(taylor, removeLongDash))
taylor <- as.data.frame(sapply(taylor, removeThousandsSep))
taylor <- as.data.frame(sapply(taylor, removeDollarSign))
View(taylor)
removeEmptyChar <- function(v) gsub("", NA, v)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeLongDash <- function(v) gsub("—", NA, v)
removeEmptyChar <- function(v) gsub("", NA, v)
removeThousandsSep <- function(v) gsub("\\,","", v)
removeDollarSign <- function(v) gsub("\\$","", v)
taylor <- as.data.frame(sapply(taylor, removeLongDash))
taylor <- as.data.frame(sapply(taylor, removeEmptyChar))
taylor <- as.data.frame(sapply(taylor, removeThousandsSep))
taylor <- as.data.frame(sapply(taylor, removeDollarSign))
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
taylor[300,]
taylor[300,6]
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeLongDash <- function(v) gsub("—", NA, v)
removeEmptyChar <- function(v) gsub("^$", NA, v)
removeThousandsSep <- function(v) gsub("\\,","", v)
removeDollarSign <- function(v) gsub("\\$","", v)
taylor <- as.data.frame(sapply(taylor, removeLongDash))
taylor <- as.data.frame(sapply(taylor, removeEmptyChar))
taylor <- as.data.frame(sapply(taylor, removeThousandsSep))
taylor <- as.data.frame(sapply(taylor, removeDollarSign))
View(taylor)
taylor <- taylor %>%
separate(
col = Attendance..tickets.sold...available.,
into = c("Attendance", "TicketsSold"),
sep = " / "
)
taylor <- taylor %>%
mutate(
Revenue = as.numeric(Revenue),
Attendance = as.numeric(Attendance),
TicketsSold = as.numeric(TicketsSold)
)
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removeLongDash <- function(v) gsub("—", NA, v)
removeEmptyChar <- function(v) gsub("^$", NA, v)
removeThousandsSep <- function(v) gsub("\\,","", v)
removeDollarSign <- function(v) gsub("\\$","", v)
for(r in c(removeLongDash, removeEmptyChar, removeThousandsSep, removeDollarSign)) {
taylor <- as.data.frame(sapply(taylor, r))
}
View(taylor)
removers <- list(
function(v) gsub("—", NA, v),
function(v) gsub("^$", NA, v)
)
for(r in removers) {
taylor <- as.data.frame(sapply(taylor, r))
}
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removers <- list(
function(v) gsub("—", NA, v),
function(v) gsub("^$", NA, v)
)
for(r in removers) {
taylor <- as.data.frame(sapply(taylor, r))
}
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removers <- list(
function(v) gsub("—", NA, v),  # caracter de dato faltante
function(v) gsub("^$", NA, v), # cadena de texto vacia
function(v) gsub("\\,","", v), # separador de miles
function(v) gsub("\\$","", v)  # signo de dolar
)
for(r in removers) {
taylor <- as.data.frame(sapply(taylor, r))
}
View(taylor)
taylor <- taylor %>%
separate(
col = Attendance..tickets.sold...available.,
into = c("Attendance", "TicketsSold"),
sep = " / "
) %>%
mutate(
Revenue = as.numeric(Revenue),
Attendance = as.numeric(Attendance),
TicketsSold = as.numeric(TicketsSold)
)
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removers <- list(
function(v) gsub("—", NA, v),  # caracter de dato faltante
function(v) gsub("^$", NA, v), # cadena de texto vacia
function(v) gsub("\\,","", v), # separador de miles
function(v) gsub("\\$","", v)  # signo de dolar
)
for(r in removers) {
taylor <- as.data.frame(sapply(taylor, r))
}
taylor <- taylor %>%
separate(
col = Attendance..tickets.sold...available.,
into = c("Attendance", "TicketsSold"),
sep = " / "
) %>%
mutate(
Revenue = as.numeric(Revenue),
Attendance = as.numeric(Attendance),
TicketsSold = as.numeric(TicketsSold),
NumOpeningActs = if_else(is.na(Opening.act.s.), 0, 1 + str_count(Opening.act.s., "\n"))
)
View(taylor)
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removers <- list(
function(v) gsub("—", NA, v),  # caracter de dato faltante
function(v) gsub("^$", NA, v), # cadena de texto vacia
function(v) gsub("\\,","", v), # separador de miles
function(v) gsub("\\$","", v), # signo de dolar
function(v) gsub("\\_","", v)  # guion bajo como separador de palabras
)
for(r in removers) {
taylor <- as.data.frame(sapply(taylor, r))
}
View(taylor)
taylor <- read.csv('Taylor_Train.csv', fileEncoding = 'windows-1252')
removers <- list(
function(v) gsub("—", NA, v),  # caracter de dato faltante
function(v) gsub("^$", NA, v), # cadena de texto vacia
function(v) gsub("\\,","", v), # separador de miles
function(v) gsub("\\$","", v), # signo de dolar
function(v) gsub("\\_"," ", v)  # guion bajo como separador de palabras
)
for(r in removers) {
taylor <- as.data.frame(sapply(taylor, r))
}
View(taylor)
taylor <- taylor %>%
separate(
col = Attendance..tickets.sold...available.,
into = c("Attendance", "TicketsSold"),
sep = " / "
) %>%
mutate(
Revenue = as.numeric(Revenue),
Attendance = as.numeric(Attendance),
TicketsSold = as.numeric(TicketsSold),
NumOpeningActs = if_else(is.na(Opening.act.s.), 0, 1 + str_count(Opening.act.s., "\n"))
)
View(taylor)
colnames(taylor)
colnames(taylor)[4] <- "OpeningActs"
View(taylor)
library(here)
